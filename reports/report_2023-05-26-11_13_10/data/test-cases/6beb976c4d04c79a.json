{"uid":"6beb976c4d04c79a","name":"test_4[必填项为空创建门店活动码hq]","fullName":"core.testcase.test_excel#test_4","historyId":"998526869add9ab9267dca586212d150","time":{"start":1685070376245,"stop":1685070407549,"duration":31304},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x00D3E073]\n\t(No symbol) [0x00CD39F1]\n\t(No symbol) [0x00BE4FF8]\n\t(No symbol) [0x00C103CF]\n\t(No symbol) [0x00C105DB]\n\t(No symbol) [0x00C3EF72]\n\t(No symbol) [0x00C2B144]\n\t(No symbol) [0x00C3D68C]\n\t(No symbol) [0x00C2AEF6]\n\t(No symbol) [0x00C071A8]\n\t(No symbol) [0x00C0830D]\n\tGetHandleVerifier [0x00FB4FB2+2511634]\n\tGetHandleVerifier [0x00FEA4D5+2730037]\n\tGetHandleVerifier [0x00FEF12C+2749580]\n\tGetHandleVerifier [0x00DE5270+611792]\n\t(No symbol) [0x00CDC622]\n\t(No symbol) [0x00CE1E38]\n\t(No symbol) [0x00CE1F1B]\n\t(No symbol) [0x00CEC35B]\n\tBaseThreadInitThunk [0x76420099+25]\n\tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]","statusTrace":"case = {'name': '必填项为空创建门店活动码hq(admin_driver)', 'steps': [(1, '点击导航栏渠道活码工具选项', 'click', \"//span[contains(text(),'渠道活码工具')]\", ..., (5, '点击创建门店活动码按钮', 'click', \"//span[contains(text(),'创建门店活码')]\", None), (6, '退出页面', 'iframe_exit', None, None), ...]}\nrequest = <FixtureRequest for <Function test_4[必填项为空创建门店活动码hq]>>\n\n    @allure.feature(\"Web自动化测试平台\")\n    @allure.story(suite[\"name\"])\n    @pytest.mark.parametrize(\n        \"case\",\n        suite[\"case_list\"],\n        ids=[\n            handle_name(case[\"name\"])[0] for case in suite[\"case_list\"]\n        ],  # 参数化测试的名字\n    )  # 参数化的本质：动态生成用例\n    def test_abc(case, request):\n        logger.info(\"测试用例开始执行\")\n        # print(data)\n    \n        # 如果能够调用夹具，那么就有了浏览\n        # 根据excel内容，动态调用指定的夹具\n        # 1. 拿到用例名称     用例4(admin_driver)\n        # 2. 从用例名称中，解析夹具名称    admin_driver\n        case_name = handle_name(case[\"name\"])[0]\n        fixture_name = handle_name(case[\"name\"])[1]\n    \n        logger.info(f\"解析用例名称:{case_name=}, {fixture_name=}\")\n    \n        driver = request.getfixturevalue(fixture_name)\n        kw = KeyWord(driver)\n        kw.iframe_exit()\n        if \"hq\" in case_name:\n            kw.click(\"/html/body/div[1]/div[1]/div[1]/div[2]/div/ul/li[4]/div/span\")\n        kw.refresh()\n        # 根据excel内容进行关键字的调用\n        for step in case[\"steps\"]:\n            name, key, args = handle_step(step)  # 这三个变量，可以再进行处理、修改\n            # 能不能加载csv文件\n            # 能行循环调用 func\n            logger.info(f\"执行关键字{name=}, {key=}, {args=}\")\n    \n            with allure.step(name):  # 在allure显式测试步骤\n                try:\n                    func = getattr(kw, key)  # 通过反射，难道关键字执行函数\n                    func(*args)  # 调用关键字函数\n                except Exception as error:\n                    allure.attach(driver.get_screenshot_as_png(), name) #截图\n>                   raise error\n\ncore\\until\\cases.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\until\\cases.py:108: in test_abc\n    func(*args)  # 调用关键字函数\ncore\\until\\kdt.py:237: in assert_text_in\n    element = self.find_element(loc)\ncore\\until\\kdt.py:93: in find_element\n    element = self.wait.until(f)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c46951eb1a12bc669b79803cc2fc62d8\")>, method = <function KeyWord.find_element.<locals>.f at 0x00000131B7783880>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00D3E073]\nE       \t(No symbol) [0x00CD39F1]\nE       \t(No symbol) [0x00BE4FF8]\nE       \t(No symbol) [0x00C103CF]\nE       \t(No symbol) [0x00C105DB]\nE       \t(No symbol) [0x00C3EF72]\nE       \t(No symbol) [0x00C2B144]\nE       \t(No symbol) [0x00C3D68C]\nE       \t(No symbol) [0x00C2AEF6]\nE       \t(No symbol) [0x00C071A8]\nE       \t(No symbol) [0x00C0830D]\nE       \tGetHandleVerifier [0x00FB4FB2+2511634]\nE       \tGetHandleVerifier [0x00FEA4D5+2730037]\nE       \tGetHandleVerifier [0x00FEF12C+2749580]\nE       \tGetHandleVerifier [0x00DE5270+611792]\nE       \t(No symbol) [0x00CDC622]\nE       \t(No symbol) [0x00CE1E38]\nE       \t(No symbol) [0x00CE1F1B]\nE       \t(No symbol) [0x00CEC35B]\nE       \tBaseThreadInitThunk [0x76420099+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]\n\nD:\\software\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"admin_driver","time":{"start":1685069948681,"stop":1685069963101,"duration":14420},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x00D3E073]\n\t(No symbol) [0x00CD39F1]\n\t(No symbol) [0x00BE4FF8]\n\t(No symbol) [0x00C103CF]\n\t(No symbol) [0x00C105DB]\n\t(No symbol) [0x00C3EF72]\n\t(No symbol) [0x00C2B144]\n\t(No symbol) [0x00C3D68C]\n\t(No symbol) [0x00C2AEF6]\n\t(No symbol) [0x00C071A8]\n\t(No symbol) [0x00C0830D]\n\tGetHandleVerifier [0x00FB4FB2+2511634]\n\tGetHandleVerifier [0x00FEA4D5+2730037]\n\tGetHandleVerifier [0x00FEF12C+2749580]\n\tGetHandleVerifier [0x00DE5270+611792]\n\t(No symbol) [0x00CDC622]\n\t(No symbol) [0x00CE1E38]\n\t(No symbol) [0x00CE1F1B]\n\t(No symbol) [0x00CEC35B]\n\tBaseThreadInitThunk [0x76420099+25]\n\tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]","statusTrace":"case = {'name': '必填项为空创建门店活动码hq(admin_driver)', 'steps': [(1, '点击导航栏渠道活码工具选项', 'click', \"//span[contains(text(),'渠道活码工具')]\", ..., (5, '点击创建门店活动码按钮', 'click', \"//span[contains(text(),'创建门店活码')]\", None), (6, '退出页面', 'iframe_exit', None, None), ...]}\nrequest = <FixtureRequest for <Function test_4[必填项为空创建门店活动码hq]>>\n\n    @allure.feature(\"Web自动化测试平台\")\n    @allure.story(suite[\"name\"])\n    @pytest.mark.parametrize(\n        \"case\",\n        suite[\"case_list\"],\n        ids=[\n            handle_name(case[\"name\"])[0] for case in suite[\"case_list\"]\n        ],  # 参数化测试的名字\n    )  # 参数化的本质：动态生成用例\n    def test_abc(case, request):\n        logger.info(\"测试用例开始执行\")\n        # print(data)\n    \n        # 如果能够调用夹具，那么就有了浏览\n        # 根据excel内容，动态调用指定的夹具\n        # 1. 拿到用例名称     用例4(admin_driver)\n        # 2. 从用例名称中，解析夹具名称    admin_driver\n        case_name = handle_name(case[\"name\"])[0]\n        fixture_name = handle_name(case[\"name\"])[1]\n    \n        logger.info(f\"解析用例名称:{case_name=}, {fixture_name=}\")\n    \n        driver = request.getfixturevalue(fixture_name)\n        kw = KeyWord(driver)\n        kw.iframe_exit()\n        if \"hq\" in case_name:\n            kw.click(\"/html/body/div[1]/div[1]/div[1]/div[2]/div/ul/li[4]/div/span\")\n        kw.refresh()\n        # 根据excel内容进行关键字的调用\n        for step in case[\"steps\"]:\n            name, key, args = handle_step(step)  # 这三个变量，可以再进行处理、修改\n            # 能不能加载csv文件\n            # 能行循环调用 func\n            logger.info(f\"执行关键字{name=}, {key=}, {args=}\")\n    \n            with allure.step(name):  # 在allure显式测试步骤\n                try:\n                    func = getattr(kw, key)  # 通过反射，难道关键字执行函数\n                    func(*args)  # 调用关键字函数\n                except Exception as error:\n                    allure.attach(driver.get_screenshot_as_png(), name) #截图\n>                   raise error\n\ncore\\until\\cases.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\until\\cases.py:108: in test_abc\n    func(*args)  # 调用关键字函数\ncore\\until\\kdt.py:237: in assert_text_in\n    element = self.find_element(loc)\ncore\\until\\kdt.py:93: in find_element\n    element = self.wait.until(f)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c46951eb1a12bc669b79803cc2fc62d8\")>, method = <function KeyWord.find_element.<locals>.f at 0x00000131B7783880>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00D3E073]\nE       \t(No symbol) [0x00CD39F1]\nE       \t(No symbol) [0x00BE4FF8]\nE       \t(No symbol) [0x00C103CF]\nE       \t(No symbol) [0x00C105DB]\nE       \t(No symbol) [0x00C3EF72]\nE       \t(No symbol) [0x00C2B144]\nE       \t(No symbol) [0x00C3D68C]\nE       \t(No symbol) [0x00C2AEF6]\nE       \t(No symbol) [0x00C071A8]\nE       \t(No symbol) [0x00C0830D]\nE       \tGetHandleVerifier [0x00FB4FB2+2511634]\nE       \tGetHandleVerifier [0x00FEA4D5+2730037]\nE       \tGetHandleVerifier [0x00FEF12C+2749580]\nE       \tGetHandleVerifier [0x00DE5270+611792]\nE       \t(No symbol) [0x00CDC622]\nE       \t(No symbol) [0x00CE1E38]\nE       \t(No symbol) [0x00CE1F1B]\nE       \t(No symbol) [0x00CEC35B]\nE       \tBaseThreadInitThunk [0x76420099+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]\n\nD:\\software\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException","steps":[{"name":"点击导航栏渠道活码工具选项","time":{"start":1685070377858,"stop":1685070378482,"duration":624},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"点击导航栏活动码选项","time":{"start":1685070378482,"stop":1685070378888,"duration":406},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"点击导航栏门店活动码选项","time":{"start":1685070378888,"stop":1685070379301,"duration":413},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"切换门店活动码主页","time":{"start":1685070379301,"stop":1685070379673,"duration":372},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"点击创建门店活动码按钮","time":{"start":1685070379674,"stop":1685070381140,"duration":1466},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"退出页面","time":{"start":1685070381140,"stop":1685070381147,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"切换创建门店活动码页面","time":{"start":1685070381147,"stop":1685070382055,"duration":908},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"点击保存并生成活动码按钮","time":{"start":1685070382056,"stop":1685070382495,"duration":439},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"退出页面","time":{"start":1685070382496,"stop":1685070382500,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"断言提示信息","time":{"start":1685070382500,"stop":1685070407544,"duration":25044},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x00D3E073]\n\t(No symbol) [0x00CD39F1]\n\t(No symbol) [0x00BE4FF8]\n\t(No symbol) [0x00C103CF]\n\t(No symbol) [0x00C105DB]\n\t(No symbol) [0x00C3EF72]\n\t(No symbol) [0x00C2B144]\n\t(No symbol) [0x00C3D68C]\n\t(No symbol) [0x00C2AEF6]\n\t(No symbol) [0x00C071A8]\n\t(No symbol) [0x00C0830D]\n\tGetHandleVerifier [0x00FB4FB2+2511634]\n\tGetHandleVerifier [0x00FEA4D5+2730037]\n\tGetHandleVerifier [0x00FEF12C+2749580]\n\tGetHandleVerifier [0x00DE5270+611792]\n\t(No symbol) [0x00CDC622]\n\t(No symbol) [0x00CE1E38]\n\t(No symbol) [0x00CE1F1B]\n\t(No symbol) [0x00CEC35B]\n\tBaseThreadInitThunk [0x76420099+25]\n\tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]\n\n","statusTrace":"  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\cases.py\", line 111, in test_abc\n    raise error\n  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\cases.py\", line 108, in test_abc\n    func(*args)  # 调用关键字函数\n  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\kdt.py\", line 237, in assert_text_in\n    element = self.find_element(loc)\n  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\kdt.py\", line 93, in find_element\n    element = self.wait.until(f)\n  File \"D:\\software\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 90, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[{"uid":"67bfa581524da95a","name":"断言提示信息","source":"67bfa581524da95a.attach","type":"image/png","size":180077}],"parameters":[],"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1}],"attachments":[{"uid":"625d9e8ed5a0651e","name":"log","source":"625d9e8ed5a0651e.txt","type":"text/plain","size":1920}],"parameters":[],"hasContent":true,"stepsCount":10,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[{"name":"admin_driver::0","time":{"start":1685070786670,"stop":1685070790079,"duration":3409},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"门店活动码"},{"name":"feature","value":"Web自动化测试平台"},{"name":"parentSuite","value":"core.testcase"},{"name":"suite","value":"test_excel"},{"name":"host","value":"LAPTOP-JPR7EIKK"},{"name":"thread","value":"51864-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"core.testcase.test_excel"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'name': '必填项为空创建门店活动码hq(admin_driver)', 'steps': [(1, '点击导航栏渠道活码工具选项', 'click', \"//span[contains(text(),'渠道活码工具')]\", None), (2, '点击导航栏活动码选项', 'click', \"//span[contains(text(),'活动码')]\", None), (3, '点击导航栏门店活动码选项', 'click', \"//span[contains(text(),'门店活动码')]\", None), (4, '切换门店活动码主页', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/page\"]', None), (5, '点击创建门店活动码按钮', 'click', \"//span[contains(text(),'创建门店活码')]\", None), (6, '退出页面', 'iframe_exit', None, None), (7, '切换创建门店活动码页面', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/create\"]', None), (8, '点击保存并生成活动码按钮', 'click', \"//div[@class='buttonContainer']/button[2]/span\", None), (9, '退出页面', 'iframe_exit', None, None), (10, '断言提示信息', 'assert_text_in', '/html/body/div[4]/div[1]', '未选择主理人'), (11, '切换创建门店活动码页面', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/create\"]', None), (12, '点击关联主理按钮', 'click', \"//span[contains(text(),'选择关联主理')]\", None), (13, '控件输入主理人名称', 'input', '//input[@placeholder = \"搜索门店/主理人\"]', 'U2店长'), (14, '控件输入框回车', 'keyboard_enter', '//input[@placeholder = \"搜索门店/主理人\"]', None), (15, '勾选全部主理人', 'click', \"//span[contains(text(),'全部主理')]/../label/span/input\", None), (16, '点击控件确认按钮', 'click', \"//span[contains(text(),'确定')]\", None), (17, '点击保存并生成活动码按钮', 'click', \"//div[@class='buttonContainer']/button[2]/span\", None), (18, '等待1s', 'sleep', 1, None), (19, '断言提示信息', 'assert_mandatory_field', None, '请输入活动名称,请选择渠道')]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6beb976c4d04c79a.json","parameterValues":["{'name': '必填项为空创建门店活动码hq(admin_driver)', 'steps': [(1, '点击导航栏渠道活码工具选项', 'click', \"//span[contains(text(),'渠道活码工具')]\", None), (2, '点击导航栏活动码选项', 'click', \"//span[contains(text(),'活动码')]\", None), (3, '点击导航栏门店活动码选项', 'click', \"//span[contains(text(),'门店活动码')]\", None), (4, '切换门店活动码主页', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/page\"]', None), (5, '点击创建门店活动码按钮', 'click', \"//span[contains(text(),'创建门店活码')]\", None), (6, '退出页面', 'iframe_exit', None, None), (7, '切换创建门店活动码页面', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/create\"]', None), (8, '点击保存并生成活动码按钮', 'click', \"//div[@class='buttonContainer']/button[2]/span\", None), (9, '退出页面', 'iframe_exit', None, None), (10, '断言提示信息', 'assert_text_in', '/html/body/div[4]/div[1]', '未选择主理人'), (11, '切换创建门店活动码页面', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/create\"]', None), (12, '点击关联主理按钮', 'click', \"//span[contains(text(),'选择关联主理')]\", None), (13, '控件输入主理人名称', 'input', '//input[@placeholder = \"搜索门店/主理人\"]', 'U2店长'), (14, '控件输入框回车', 'keyboard_enter', '//input[@placeholder = \"搜索门店/主理人\"]', None), (15, '勾选全部主理人', 'click', \"//span[contains(text(),'全部主理')]/../label/span/input\", None), (16, '点击控件确认按钮', 'click', \"//span[contains(text(),'确定')]\", None), (17, '点击保存并生成活动码按钮', 'click', \"//div[@class='buttonContainer']/button[2]/span\", None), (18, '等待1s', 'sleep', 1, None), (19, '断言提示信息', 'assert_mandatory_field', None, '请输入活动名称,请选择渠道')]}"]}