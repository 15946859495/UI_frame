{"name": "test_4[必填项为空创建门店活动码hq]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x00E5E073]\n\t(No symbol) [0x00DF39F1]\n\t(No symbol) [0x00D04FF8]\n\t(No symbol) [0x00D303CF]\n\t(No symbol) [0x00D305DB]\n\t(No symbol) [0x00D5EF72]\n\t(No symbol) [0x00D4B144]\n\t(No symbol) [0x00D5D68C]\n\t(No symbol) [0x00D4AEF6]\n\t(No symbol) [0x00D271A8]\n\t(No symbol) [0x00D2830D]\n\tGetHandleVerifier [0x010D4FB2+2511634]\n\tGetHandleVerifier [0x0110A4D5+2730037]\n\tGetHandleVerifier [0x0110F12C+2749580]\n\tGetHandleVerifier [0x00F05270+611792]\n\t(No symbol) [0x00DFC622]\n\t(No symbol) [0x00E01E38]\n\t(No symbol) [0x00E01F1B]\n\t(No symbol) [0x00E0C35B]\n\tBaseThreadInitThunk [0x76420099+25]\n\tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]", "trace": "case = {'name': '必填项为空创建门店活动码hq(admin_driver)', 'steps': [(1, '点击导航栏渠道活码工具选项', 'click', \"//span[contains(text(),'渠道活码工具')]\", ..., (5, '点击创建门店活动码按钮', 'click', \"//span[contains(text(),'创建门店活码')]\", None), (6, '退出页面', 'iframe_exit', None, None), ...]}\nrequest = <FixtureRequest for <Function test_4[必填项为空创建门店活动码hq]>>\n\n    @allure.feature(\"Web自动化测试平台\")\n    @allure.story(suite[\"name\"])\n    @pytest.mark.parametrize(\n        \"case\",\n        suite[\"case_list\"],\n        ids=[\n            handle_name(case[\"name\"])[0] for case in suite[\"case_list\"]\n        ],  # 参数化测试的名字\n    )  # 参数化的本质：动态生成用例\n    def test_abc(case, request):\n        logger.info(\"测试用例开始执行\")\n        # print(data)\n    \n        # 如果能够调用夹具，那么就有了浏览\n        # 根据excel内容，动态调用指定的夹具\n        # 1. 拿到用例名称     用例4(admin_driver)\n        # 2. 从用例名称中，解析夹具名称    admin_driver\n        case_name = handle_name(case[\"name\"])[0]\n        fixture_name = handle_name(case[\"name\"])[1]\n    \n        logger.info(f\"解析用例名称:{case_name=}, {fixture_name=}\")\n    \n        driver = request.getfixturevalue(fixture_name)\n        kw = KeyWord(driver)\n        kw.iframe_exit()\n        if \"hq\" in case_name:\n            kw.click(\"/html/body/div[1]/div[1]/div[1]/div[2]/div/ul/li[4]/div/span\")\n        kw.refresh()\n        # 根据excel内容进行关键字的调用\n        for step in case[\"steps\"]:\n            name, key, args = handle_step(step)  # 这三个变量，可以再进行处理、修改\n            # 能不能加载csv文件\n            # 能行循环调用 func\n            logger.info(f\"执行关键字{name=}, {key=}, {args=}\")\n    \n            with allure.step(name):  # 在allure显式测试步骤\n                try:\n                    func = getattr(kw, key)  # 通过反射，难道关键字执行函数\n                    func(*args)  # 调用关键字函数\n                except Exception as error:\n                    allure.attach(driver.get_screenshot_as_png(), name) #截图\n>                   raise error\n\ncore\\until\\cases.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\until\\cases.py:108: in test_abc\n    func(*args)  # 调用关键字函数\ncore\\until\\kdt.py:237: in assert_text_in\n    element = self.find_element(loc)\ncore\\until\\kdt.py:93: in find_element\n    element = self.wait.until(f)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bd7ad991ed05d1fec7809affe27a0472\")>, method = <function KeyWord.find_element.<locals>.f at 0x0000021E792A5BD0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00E5E073]\nE       \t(No symbol) [0x00DF39F1]\nE       \t(No symbol) [0x00D04FF8]\nE       \t(No symbol) [0x00D303CF]\nE       \t(No symbol) [0x00D305DB]\nE       \t(No symbol) [0x00D5EF72]\nE       \t(No symbol) [0x00D4B144]\nE       \t(No symbol) [0x00D5D68C]\nE       \t(No symbol) [0x00D4AEF6]\nE       \t(No symbol) [0x00D271A8]\nE       \t(No symbol) [0x00D2830D]\nE       \tGetHandleVerifier [0x010D4FB2+2511634]\nE       \tGetHandleVerifier [0x0110A4D5+2730037]\nE       \tGetHandleVerifier [0x0110F12C+2749580]\nE       \tGetHandleVerifier [0x00F05270+611792]\nE       \t(No symbol) [0x00DFC622]\nE       \t(No symbol) [0x00E01E38]\nE       \t(No symbol) [0x00E01F1B]\nE       \t(No symbol) [0x00E0C35B]\nE       \tBaseThreadInitThunk [0x76420099+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]\n\nD:\\software\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException"}, "steps": [{"name": "点击导航栏渠道活码工具选项", "status": "passed", "start": 1685497175837, "stop": 1685497176512}, {"name": "点击导航栏活动码选项", "status": "passed", "start": 1685497176512, "stop": 1685497176935}, {"name": "点击导航栏门店活动码选项", "status": "passed", "start": 1685497176936, "stop": 1685497177348}, {"name": "切换门店活动码主页", "status": "passed", "start": 1685497177349, "stop": 1685497177745}, {"name": "点击创建门店活动码按钮", "status": "passed", "start": 1685497177746, "stop": 1685497179272}, {"name": "退出页面", "status": "passed", "start": 1685497179273, "stop": 1685497179299}, {"name": "切换创建门店活动码页面", "status": "passed", "start": 1685497179299, "stop": 1685497180346}, {"name": "点击保存并生成活动码按钮", "status": "passed", "start": 1685497180347, "stop": 1685497180822}, {"name": "退出页面", "status": "passed", "start": 1685497180824, "stop": 1685497180829}, {"name": "断言提示信息", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x00E5E073]\n\t(No symbol) [0x00DF39F1]\n\t(No symbol) [0x00D04FF8]\n\t(No symbol) [0x00D303CF]\n\t(No symbol) [0x00D305DB]\n\t(No symbol) [0x00D5EF72]\n\t(No symbol) [0x00D4B144]\n\t(No symbol) [0x00D5D68C]\n\t(No symbol) [0x00D4AEF6]\n\t(No symbol) [0x00D271A8]\n\t(No symbol) [0x00D2830D]\n\tGetHandleVerifier [0x010D4FB2+2511634]\n\tGetHandleVerifier [0x0110A4D5+2730037]\n\tGetHandleVerifier [0x0110F12C+2749580]\n\tGetHandleVerifier [0x00F05270+611792]\n\t(No symbol) [0x00DFC622]\n\t(No symbol) [0x00E01E38]\n\t(No symbol) [0x00E01F1B]\n\t(No symbol) [0x00E0C35B]\n\tBaseThreadInitThunk [0x76420099+25]\n\tRtlGetAppContainerNamedObjectPath [0x77747B6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77747B3E+238]\n\n", "trace": "  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\cases.py\", line 111, in test_abc\n    raise error\n  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\cases.py\", line 108, in test_abc\n    func(*args)  # 调用关键字函数\n  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\kdt.py\", line 237, in assert_text_in\n    element = self.find_element(loc)\n  File \"E:\\zdh\\pythonProject\\UI_frame\\core\\until\\kdt.py\", line 93, in find_element\n    element = self.wait.until(f)\n  File \"D:\\software\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 90, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "attachments": [{"name": "断言提示信息", "source": "979b71bc-4b2f-4c75-b72e-dc5dacdf4aa8-attachment.attach"}], "start": 1685497180830, "stop": 1685497205807}], "attachments": [{"name": "log", "source": "80b8775f-fdb3-4067-a98a-53f44e14dec4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'name': '必填项为空创建门店活动码hq(admin_driver)', 'steps': [(1, '点击导航栏渠道活码工具选项', 'click', \"//span[contains(text(),'渠道活码工具')]\", None), (2, '点击导航栏活动码选项', 'click', \"//span[contains(text(),'活动码')]\", None), (3, '点击导航栏门店活动码选项', 'click', \"//span[contains(text(),'门店活动码')]\", None), (4, '切换门店活动码主页', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/page\"]', None), (5, '点击创建门店活动码按钮', 'click', \"//span[contains(text(),'创建门店活码')]\", None), (6, '退出页面', 'iframe_exit', None, None), (7, '切换创建门店活动码页面', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/create\"]', None), (8, '点击保存并生成活动码按钮', 'click', \"//div[@class='buttonContainer']/button[2]/span\", None), (9, '退出页面', 'iframe_exit', None, None), (10, '断言提示信息', 'assert_text_in', '/html/body/div[4]/div[1]', '未选择主理人'), (11, '切换创建门店活动码页面', 'iframe_enter', '//iframe[@src=\"/marketing/storeActivityCode/create\"]', None), (12, '点击关联主理按钮', 'click', \"//span[contains(text(),'选择关联主理')]\", None), (13, '控件输入主理人名称', 'input', '//input[@placeholder = \"搜索门店/主理人\"]', 'U2店长'), (14, '控件输入框回车', 'keyboard_enter', '//input[@placeholder = \"搜索门店/主理人\"]', None), (15, '勾选全部主理人', 'click', \"//span[contains(text(),'全部主理')]/../label/span/input\", None), (16, '点击控件确认按钮', 'click', \"//span[contains(text(),'确定')]\", None), (17, '点击保存并生成活动码按钮', 'click', \"//div[@class='buttonContainer']/button[2]/span\", None), (18, '等待1s', 'sleep', 1, None), (19, '断言提示信息', 'assert_mandatory_field', None, '请输入活动名称,请选择渠道')]}"}], "start": 1685497174150, "stop": 1685497205820, "uuid": "380816c7-29bb-4079-bdd7-394de0b2f6cd", "historyId": "998526869add9ab9267dca586212d150", "testCaseId": "0e52030eb6d26be65b675742b2dce401", "fullName": "core.testcase.test_excel#test_4", "labels": [{"name": "feature", "value": "Web自动化测试平台"}, {"name": "story", "value": "门店活动码"}, {"name": "parentSuite", "value": "core.testcase"}, {"name": "suite", "value": "test_excel"}, {"name": "host", "value": "LAPTOP-JPR7EIKK"}, {"name": "thread", "value": "99612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "core.testcase.test_excel"}]}